[{"C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\index.tsx":"1","C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\App.tsx":"2","C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\API.ts":"3","C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\utils.ts":"4","C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\components\\QuestionCard.tsx":"5","C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\App.style.ts":"6"},{"size":196,"mtime":1612065395390,"results":"7","hashOfConfig":"8"},{"size":2996,"mtime":1613625384013,"results":"9","hashOfConfig":"8"},{"size":995,"mtime":1613330145198,"results":"10","hashOfConfig":"8"},{"size":136,"mtime":1613317452812,"results":"11","hashOfConfig":"8"},{"size":1060,"mtime":1613448160346,"results":"12","hashOfConfig":"8"},{"size":451,"mtime":1613625668111,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2f04o5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\index.tsx",[],["29","30"],"C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\App.tsx",["31"],"C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\API.ts",["32"],"import QuestionCard from './components/QuestionCard';\r\nimport { shuffleArray } from './utils';\r\n\r\nexport type Question = {\r\n    category: string,\r\n    correct_answer: string,\r\n    difficulty: string,\r\n    incorrect_answers: string[]\r\n    question: string,\r\n    type: string\r\n}\r\n\r\n// The below extends upon the above Question type by adding another field: answers\r\nexport type QuestionState = Question & { answers: string[] }\r\n\r\n\r\nexport enum Difficulty {\r\n    EASY = \"easy\",\r\n    MEDIUM = \"medium\",\r\n    HARD = \"hard\"\r\n}\r\n\r\nexport const fetchQuizQuestions = async (\r\n    amount: number, \r\n    difficulty: Difficulty\r\n) => {\r\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\r\n    const data = await (await fetch(endpoint)).json();\r\n    return data.results.map((question: Question) =>\r\n        ({\r\n            ...question,\r\n            answers: shuffleArray([...question.incorrect_answers, question.correct_answer])\r\n        })\r\n    );\r\n}","C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\utils.ts",["33"],"import { randomBytes } from \"crypto\";\r\n\r\nexport const shuffleArray = (array: any[]) => \r\n    [...array].sort(() => Math.random() - 0.5);","C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\components\\QuestionCard.tsx",[],"C:\\Users\\shai_\\source\\repos\\react-quiz\\src\\App.style.ts",["34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":62,"column":22,"nodeType":"41","messageId":"42","endLine":62,"endColumn":24},{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":20},{"ruleId":"43","severity":1,"message":"47","line":1,"column":10,"nodeType":"45","messageId":"46","endLine":1,"endColumn":21},{"ruleId":"43","severity":1,"message":"48","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":14},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'QuestionCard' is defined but never used.","Identifier","unusedVar","'randomBytes' is defined but never used.","'styled' is defined but never used.","no-global-assign","no-unsafe-negation"]